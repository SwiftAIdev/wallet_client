# coding: utf-8

"""
    Wallet Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wallet_client.models.pagination_request_wallet_schema import PaginationRequestWalletSchema

class TestPaginationRequestWalletSchema(unittest.TestCase):
    """PaginationRequestWalletSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginationRequestWalletSchema:
        """Test PaginationRequestWalletSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginationRequestWalletSchema`
        """
        model = PaginationRequestWalletSchema()
        if include_optional:
            return PaginationRequestWalletSchema(
                page = 56,
                size = 56,
                total = 56,
                data = [
                    wallet_client.models.wallet_schema.WalletSchema(
                        id = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_delete = True, 
                        user_id = '', 
                        wallet_id = '', 
                        invoices = [
                            wallet_client.models.invoice_schema.InvoiceSchema(
                                id = 56, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                is_delete = True, 
                                inn = '', 
                                email = '0', 
                                phone_number = 'RUB', )
                            ], 
                        is_testing = True, 
                        testing_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        currency_code = 'RUB', 
                        balance = 1.337, 
                        expenses = 1.337, 
                        opening_balance = 1.337, )
                    ]
            )
        else:
            return PaginationRequestWalletSchema(
                page = 56,
                size = 56,
                total = 56,
                data = [
                    wallet_client.models.wallet_schema.WalletSchema(
                        id = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_delete = True, 
                        user_id = '', 
                        wallet_id = '', 
                        invoices = [
                            wallet_client.models.invoice_schema.InvoiceSchema(
                                id = 56, 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                is_delete = True, 
                                inn = '', 
                                email = '0', 
                                phone_number = 'RUB', )
                            ], 
                        is_testing = True, 
                        testing_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        currency_code = 'RUB', 
                        balance = 1.337, 
                        expenses = 1.337, 
                        opening_balance = 1.337, )
                    ],
        )
        """

    def testPaginationRequestWalletSchema(self):
        """Test PaginationRequestWalletSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
